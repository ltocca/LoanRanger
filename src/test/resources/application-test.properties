# ===================================================================
# Spring Boot Test Profile
#
# This configuration is used for running integration tests.
# It sets up a Testcontainers-based PostgreSQL database and a
# test SMTP server (for GreenMail or MailHog).
# ===================================================================

# ===================================================================
# DATABASE CONFIGURATION (TESTCONTAINERS)
# ===================================================================
# This special JDBC URL tells Spring Boot to start a PostgreSQL Testcontainer.
# - jdbc:tc: - The prefix for the Testcontainers JDBC driver.
# - postgresql:17-alpine - The Docker image to use.
# - ///test - The database name to create inside the container.
# - ?TC_INITFUNCTION - Scans for and applies an init script.
spring.datasource.url=jdbc:tc:postgresql:17-alpine:///test?TC_INITFUNCTION=org.testcontainers.jdbc.ext.ScriptScanner::scan
spring.datasource.driverClassName=org.testcontainers.jdbc.ContainerDatabaseDriver

# Path to the database initialization script used by the TC_INITFUNCTION parameter.
TC_INITSCRIPT="sql/schema.sql",

app.cli.enabled=false

# No username/password needed for the DB. The Testcontainers driver handles this automatically.

# ===================================================================
# DATABASE INITIALIZATION
# ===================================================================
# Automatically run schema.sql and data.sql on startup.
spring.sql.init.mode=always

# Ensures schema.sql runs before any ORM attempts to validate the schema.
spring.jpa.defer-datasource-initialization=true

# ===================================================================
# LOGGING
# ===================================================================
# Show the actual SQL statements being executed by Spring's JdbcTemplate.
logging.level.org.springframework.jdbc.core=DEBUG
# Set the Testcontainers logs to INFO for a cleaner console.
logging.level.org.testcontainers=DEBUG

# ===================================================================
# MAIL SERVER CONFIGURATION (FOR INTEGRATION TESTS)
# ===================================================================
# Enable email sending for integration tests.
mail.enabled=true

# The "from" address used in the EmailService.
spring.mail.username=loanranger@mail.ltocca.dev

# These properties are for connecting to a test SMTP server like GreenMail.
# They are often overridden dynamically by @DynamicPropertySource in the test class itself.
spring.mail.host=127.0.0.1
spring.mail.port=3025
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=false

# Note: The username and password for SMTP authentication are typically set
# by the test itself to match the test mail server's credentials. For example:
# spring.mail.username=testuser
# spring.mail.password=testpassword

logging.level.root=INFO
logging.level.org.springframework=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
